use_readme_rmd()
pkgdown::build_site()
build_readme()
build_site()
build_site()
build_readme()
build_site()
devtools::install_github("resplab/voi.remote")
library(voi.remote)
nsim = NULL
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
evpi.remote(outputs, nsim)
evpi.remote(outputs)
evpi.remote(outputs, nsim)
evpi.remote(outputs, nsim)
library(peermodels)
reset_session()
evpi.remote(outputs, nsim)
pars <- "p1"
se <- NULL
B <- NULL
nsim <- NULL
evppi.remote(outputs, inputs, pars, se, B, nsim, verbose, method)
verbose <- FALSE
evppi.remote(outputs, inputs, pars, se, B, nsim, verbose, method)
method <- NULL
evppi.remote(outputs, inputs, pars, se, B, nsim, verbose, method)
reset_session()
evppi.remote(outputs, inputs, pars, se, B, nsim, verbose, method)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs, inputs = inputs, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs, inputs = inputs, pars=c("p1","p2"), func="evppi"))
evppi.remote(outputs, inputs, pars, se, B, nsim, verbose, method)
se <- FALSE
B <-  500
evppi.remote(outputs, inputs, pars, se, B, nsim, verbose, method)
reset_session()
evppi.remote(outputs, inputs, pars, se, B, nsim, verbose, method)
evppi.remote(outputs, inputs, pars, se, B, nsim, verbose, method)
evpi.remote(outputs, nsim)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs, func="evpi"))
styler:::set_style_transformers()
styler:::style_active_file()
build_site
build_site()
build_readme()
build_site()
build_site()
pkgdown::build_site()
version
install.packages("survival")
update.packages(checkBuilt = TRUE, ask = FALSE)
install.packages("tidyverse")
install.packages(c("analogue", "arrow", "bayestestR", "BH", "blogdown", "bookdown", "brglm", "brio", "cachem", "cancensus", "car", "cowplot", "credentials", "crosstalk", "DEoptimR", "DescTools", "diffobj", "DT", "e1071", "effectsize", "furrr", "future", "gert", "GGally", "ggfortify", "ggthemes", "gh", "git2r", "here", "hexbin", "Hmisc", "htmlTable", "htmlwidgets", "httpuv", "infer", "insight", "IRdisplay", "IRkernel", "janitor", "jpeg", "kableExtra", "Lahman", "later", "latex2exp", "leaflet", "lme4", "maptools", "MatrixModels", "matrixStats", "modeldata", "moderndive", "mvtnorm", "nycflights13", "opencpu", "openxlsx", "parallelly", "parameters", "pbdZMQ", "pbkrtest", "pcaPP", "performance", "plotly", "princurve", "profileModel", "profmem", "promises", "qqplotr", "quantreg", "R.cache", "ragg", "raster", "RcppArmadillo", "RcppEigen", "renv", "repr", "reticulate", "rio", "robustbase", "rootSolve", "RPostgreSQL", "rsample", "rversions", "sandwich", "see", "servr", "shiny", "showtext", "slider", "sp", "SparseM", "statmod", "styler", "sysfonts", "systemfonts", "textshaping", "tree", "vegan", "viridis", "waldo", "xaringan", "xaringanthemer", "zip", "zoo"))
pkgdown::build_site()
library(opencpu)
version
remove.packages('opencpu')
install.packages("opencpu")
library(opencpu)
library(opencpu)
version
library(opencpu)
library(opencpu)
remove.packages('opencpu')
install.packages("opencpu")
library(opencpu)
library(opencpu)
version
remove.packages(opencpu)
remove.packages('opencpu')
library(tidyverse)
library(opencpu)
remove.packages(opencpu)
install.packages("opencpu")
library(opencpu)
setwd('/Library/Frameworks/R.framework/Versions/4.1/Resources/library')
load("Rpackages")
for (p in setdiff(packages, installed.packages()[,"Package"]))
install.packages(p)
remove.packages('opencpu')
install.packages("opencpu")
a <- 3
!is.null(a)
remove.packages('voi.remote')
devtools::install_github("resplab/voi.remote")
remove.packages('voi.remote')
devtools::install_github("resplab/voi.remote")
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
evpi.remote(outputs = outputs_nb)
library(voi.remote)
evpi.remote(outputs = outputs_nb)
library(voi)
evpi(outputs = outputs)
evpi(outputs = outputs_nb)
evpi.remote(outputs = outputs_nb)
evppi.remote()
remove.packages('remotes')
install.packages('remotes')
install.packages("remotes")
remove.package('voi.remote')
remove.packages('voi.remote')
remotes::install_github('resplab/voi.remote')
version
library(voi.remote)
evpi.remote(outputs = outputs_nb)
library(voi.remote)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
evpi.remote(outputs = outputs_nb)
evpi.remote(outputs = outputs_nb)
remove.packages('voi.remote')
remotes::install_github('resplab/voi.remote')
library(voi.remote)
evpi.remote(outputs = outputs_nb)
document()
library(peermodels)
reset_session()
evpi.remote(outputs = outputs_nb)
knitr::opts_chunk$set(echo = TRUE)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
knitr::opts_chunk$set(echo = TRUE)
